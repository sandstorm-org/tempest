// Code generated by capnpc-go. DO NOT EDIT.

package hacksession

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	fc "capnproto.org/go/capnp/v3/flowcontrol"
	schemas "capnproto.org/go/capnp/v3/schemas"
	server "capnproto.org/go/capnp/v3/server"
	context "context"
	email "sandstorm.org/go/tempest/capnp/email"
	grain "sandstorm.org/go/tempest/capnp/grain"
)

type HackSessionContext capnp.Client

// HackSessionContext_TypeID is the unique identifier for the type HackSessionContext.
const HackSessionContext_TypeID = 0xe14c1f5321159b8f

func (c HackSessionContext) GetPublicId(ctx context.Context, params func(HackSessionContext_getPublicId_Params) error) (HackSessionContext_getPublicId_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getPublicId_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_getPublicId_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteHttpGet(ctx context.Context, params func(HackSessionContext_obsoleteHttpGet_Params) error) (HackSessionContext_obsoleteHttpGet_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteHttpGet",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteHttpGet_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteHttpGet_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) GetUserAddress(ctx context.Context, params func(HackSessionContext_getUserAddress_Params) error) (email.EmailAddress_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_getUserAddress_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailAddress_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteGenerateApiToken(ctx context.Context, params func(HackSessionContext_obsoleteGenerateApiToken_Params) error) (HackSessionContext_obsoleteGenerateApiToken_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGenerateApiToken_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGenerateApiToken_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteListApiTokens(ctx context.Context, params func(HackSessionContext_obsoleteListApiTokens_Params) error) (HackSessionContext_obsoleteListApiTokens_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteListApiTokens_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteListApiTokens_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteRevokeApiToken(ctx context.Context, params func(HackSessionContext_obsoleteRevokeApiToken_Params) error) (HackSessionContext_obsoleteRevokeApiToken_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteRevokeApiToken_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteRevokeApiToken_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteGetIpNetwork(ctx context.Context, params func(HackSessionContext_obsoleteGetIpNetwork_Params) error) (HackSessionContext_obsoleteGetIpNetwork_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpNetwork_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpNetwork_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteGetIpInterface(ctx context.Context, params func(HackSessionContext_obsoleteGetIpInterface_Params) error) (HackSessionContext_obsoleteGetIpInterface_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetIpInterface_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetIpInterface_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ObsoleteGetUiViewForEndpoint(ctx context.Context, params func(HackSessionContext_obsoleteGetUiViewForEndpoint_Params) error) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetUiViewForEndpoint",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(HackSessionContext_obsoleteGetUiViewForEndpoint_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) GetSharedPermissions(ctx context.Context, params func(grain.SessionContext_getSharedPermissions_Params) error) (grain.SessionContext_getSharedPermissions_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_getSharedPermissions_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_getSharedPermissions_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) TieToUser(ctx context.Context, params func(grain.SessionContext_tieToUser_Params) error) (grain.SessionContext_tieToUser_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_tieToUser_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_tieToUser_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) Offer(ctx context.Context, params func(grain.SessionContext_offer_Params) error) (grain.SessionContext_offer_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_offer_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_offer_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) Request(ctx context.Context, params func(grain.SessionContext_request_Params) error) (grain.SessionContext_request_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_request_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_request_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) FulfillRequest(ctx context.Context, params func(grain.SessionContext_fulfillRequest_Params) error) (grain.SessionContext_fulfillRequest_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_fulfillRequest_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_fulfillRequest_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) Close(ctx context.Context, params func(grain.SessionContext_close_Params) error) (grain.SessionContext_close_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_close_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_close_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) OpenView(ctx context.Context, params func(grain.SessionContext_openView_Params) error) (grain.SessionContext_openView_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_openView_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_openView_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) ClaimRequest(ctx context.Context, params func(grain.SessionContext_claimRequest_Params) error) (grain.SessionContext_claimRequest_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_claimRequest_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_claimRequest_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) Activity(ctx context.Context, params func(grain.SessionContext_activity_Params) error) (grain.SessionContext_activity_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.SessionContext_activity_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return grain.SessionContext_activity_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release

}

func (c HackSessionContext) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c HackSessionContext) String() string {
	return "HackSessionContext(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c HackSessionContext) AddRef() HackSessionContext {
	return HackSessionContext(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c HackSessionContext) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c HackSessionContext) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c HackSessionContext) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (HackSessionContext) DecodeFromPtr(p capnp.Ptr) HackSessionContext {
	return HackSessionContext(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c HackSessionContext) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c HackSessionContext) IsSame(other HackSessionContext) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c HackSessionContext) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c HackSessionContext) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A HackSessionContext_Server is a HackSessionContext with a local implementation.
type HackSessionContext_Server interface {
	GetPublicId(context.Context, HackSessionContext_getPublicId) error

	ObsoleteHttpGet(context.Context, HackSessionContext_obsoleteHttpGet) error

	GetUserAddress(context.Context, HackSessionContext_getUserAddress) error

	ObsoleteGenerateApiToken(context.Context, HackSessionContext_obsoleteGenerateApiToken) error

	ObsoleteListApiTokens(context.Context, HackSessionContext_obsoleteListApiTokens) error

	ObsoleteRevokeApiToken(context.Context, HackSessionContext_obsoleteRevokeApiToken) error

	ObsoleteGetIpNetwork(context.Context, HackSessionContext_obsoleteGetIpNetwork) error

	ObsoleteGetIpInterface(context.Context, HackSessionContext_obsoleteGetIpInterface) error

	ObsoleteGetUiViewForEndpoint(context.Context, HackSessionContext_obsoleteGetUiViewForEndpoint) error

	GetSharedPermissions(context.Context, grain.SessionContext_getSharedPermissions) error

	TieToUser(context.Context, grain.SessionContext_tieToUser) error

	Offer(context.Context, grain.SessionContext_offer) error

	Request(context.Context, grain.SessionContext_request) error

	FulfillRequest(context.Context, grain.SessionContext_fulfillRequest) error

	Close(context.Context, grain.SessionContext_close) error

	OpenView(context.Context, grain.SessionContext_openView) error

	ClaimRequest(context.Context, grain.SessionContext_claimRequest) error

	Activity(context.Context, grain.SessionContext_activity) error

	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackSessionContext_NewServer creates a new Server from an implementation of HackSessionContext_Server.
func HackSessionContext_NewServer(s HackSessionContext_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackSessionContext_Methods(nil, s), s, c)
}

// HackSessionContext_ServerToClient creates a new Client from an implementation of HackSessionContext_Server.
// The caller is responsible for calling Release on the returned Client.
func HackSessionContext_ServerToClient(s HackSessionContext_Server) HackSessionContext {
	return HackSessionContext(capnp.NewClient(HackSessionContext_NewServer(s)))
}

// HackSessionContext_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackSessionContext_Methods(methods []server.Method, s HackSessionContext_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      0,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getPublicId",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetPublicId(ctx, HackSessionContext_getPublicId{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      1,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteHttpGet",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteHttpGet(ctx, HackSessionContext_obsoleteHttpGet{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      2,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "getUserAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetUserAddress(ctx, HackSessionContext_getUserAddress{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      3,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGenerateApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGenerateApiToken(ctx, HackSessionContext_obsoleteGenerateApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      4,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteListApiTokens",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteListApiTokens(ctx, HackSessionContext_obsoleteListApiTokens{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      5,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteRevokeApiToken",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteRevokeApiToken(ctx, HackSessionContext_obsoleteRevokeApiToken{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      6,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpNetwork",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpNetwork(ctx, HackSessionContext_obsoleteGetIpNetwork{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      7,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetIpInterface",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetIpInterface(ctx, HackSessionContext_obsoleteGetIpInterface{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe14c1f5321159b8f,
			MethodID:      8,
			InterfaceName: "hack-session.capnp:HackSessionContext",
			MethodName:    "obsoleteGetUiViewForEndpoint",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ObsoleteGetUiViewForEndpoint(ctx, HackSessionContext_obsoleteGetUiViewForEndpoint{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      0,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "getSharedPermissions",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.GetSharedPermissions(ctx, grain.SessionContext_getSharedPermissions{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      1,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "tieToUser",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.TieToUser(ctx, grain.SessionContext_tieToUser{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      2,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "offer",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Offer(ctx, grain.SessionContext_offer{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      3,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "request",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Request(ctx, grain.SessionContext_request{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      4,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "fulfillRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.FulfillRequest(ctx, grain.SessionContext_fulfillRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      5,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "close",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Close(ctx, grain.SessionContext_close{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      6,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "openView",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.OpenView(ctx, grain.SessionContext_openView{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      7,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "claimRequest",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.ClaimRequest(ctx, grain.SessionContext_claimRequest{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbf3e401d5a63f336,
			MethodID:      8,
			InterfaceName: "grain.capnp:SessionContext",
			MethodName:    "activity",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Activity(ctx, grain.SessionContext_activity{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

// HackSessionContext_getPublicId holds the state for a server call to HackSessionContext.getPublicId.
// See server.Call for documentation.
type HackSessionContext_getPublicId struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getPublicId) Args() HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getPublicId) AllocResults() (HackSessionContext_getPublicId_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(r), err
}

// HackSessionContext_obsoleteHttpGet holds the state for a server call to HackSessionContext.obsoleteHttpGet.
// See server.Call for documentation.
type HackSessionContext_obsoleteHttpGet struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteHttpGet) Args() HackSessionContext_obsoleteHttpGet_Params {
	return HackSessionContext_obsoleteHttpGet_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteHttpGet) AllocResults() (HackSessionContext_obsoleteHttpGet_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteHttpGet_Results(r), err
}

// HackSessionContext_getUserAddress holds the state for a server call to HackSessionContext.getUserAddress.
// See server.Call for documentation.
type HackSessionContext_getUserAddress struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_getUserAddress) Args() HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_getUserAddress) AllocResults() (email.EmailAddress, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return email.EmailAddress(r), err
}

// HackSessionContext_obsoleteGenerateApiToken holds the state for a server call to HackSessionContext.obsoleteGenerateApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteGenerateApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGenerateApiToken) Args() HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGenerateApiToken) AllocResults() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGenerateApiToken_Results(r), err
}

// HackSessionContext_obsoleteListApiTokens holds the state for a server call to HackSessionContext.obsoleteListApiTokens.
// See server.Call for documentation.
type HackSessionContext_obsoleteListApiTokens struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteListApiTokens) Args() HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteListApiTokens) AllocResults() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Results(r), err
}

// HackSessionContext_obsoleteRevokeApiToken holds the state for a server call to HackSessionContext.obsoleteRevokeApiToken.
// See server.Call for documentation.
type HackSessionContext_obsoleteRevokeApiToken struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteRevokeApiToken) Args() HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteRevokeApiToken) AllocResults() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(r), err
}

// HackSessionContext_obsoleteGetIpNetwork holds the state for a server call to HackSessionContext.obsoleteGetIpNetwork.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpNetwork struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpNetwork) Args() HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpNetwork) AllocResults() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Results(r), err
}

// HackSessionContext_obsoleteGetIpInterface holds the state for a server call to HackSessionContext.obsoleteGetIpInterface.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetIpInterface struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetIpInterface) Args() HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetIpInterface) AllocResults() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Results(r), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint holds the state for a server call to HackSessionContext.obsoleteGetUiViewForEndpoint.
// See server.Call for documentation.
type HackSessionContext_obsoleteGetUiViewForEndpoint struct {
	*server.Call
}

// Args returns the call's arguments.
func (c HackSessionContext_obsoleteGetUiViewForEndpoint) Args() HackSessionContext_obsoleteGetUiViewForEndpoint_Params {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(c.Call.Args())
}

// AllocResults allocates the results struct.
func (c HackSessionContext_obsoleteGetUiViewForEndpoint) AllocResults() (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	r, err := c.Call.AllocResults(capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(r), err
}

// HackSessionContext_List is a list of HackSessionContext.
type HackSessionContext_List = capnp.CapList[HackSessionContext]

// NewHackSessionContext_List creates a new list of HackSessionContext.
func NewHackSessionContext_List(s *capnp.Segment, sz int32) (HackSessionContext_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[HackSessionContext](l), err
}

type HackSessionContext_getPublicId_Params capnp.Struct

// HackSessionContext_getPublicId_Params_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Params.
const HackSessionContext_getPublicId_Params_TypeID = 0xe706d835e9cd64af

func NewHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params(st), err
}

func NewRootHackSessionContext_getPublicId_Params(s *capnp.Segment) (HackSessionContext_getPublicId_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getPublicId_Params(st), err
}

func ReadRootHackSessionContext_getPublicId_Params(msg *capnp.Message) (HackSessionContext_getPublicId_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Params(root.Struct()), err
}

func (s HackSessionContext_getPublicId_Params) String() string {
	str, _ := text.Marshal(0xe706d835e9cd64af, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getPublicId_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getPublicId_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getPublicId_Params {
	return HackSessionContext_getPublicId_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getPublicId_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getPublicId_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getPublicId_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getPublicId_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_getPublicId_Params_List is a list of HackSessionContext_getPublicId_Params.
type HackSessionContext_getPublicId_Params_List = capnp.StructList[HackSessionContext_getPublicId_Params]

// NewHackSessionContext_getPublicId_Params creates a new list of HackSessionContext_getPublicId_Params.
func NewHackSessionContext_getPublicId_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_getPublicId_Params](l), err
}

// HackSessionContext_getPublicId_Params_Future is a wrapper for a HackSessionContext_getPublicId_Params promised by a client call.
type HackSessionContext_getPublicId_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_getPublicId_Params_Future) Struct() (HackSessionContext_getPublicId_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_getPublicId_Params(p.Struct()), err
}

type HackSessionContext_getPublicId_Results capnp.Struct

// HackSessionContext_getPublicId_Results_TypeID is the unique identifier for the type HackSessionContext_getPublicId_Results.
const HackSessionContext_getPublicId_Results_TypeID = 0xe96193c522f6c05d

func NewHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(st), err
}

func NewRootHackSessionContext_getPublicId_Results(s *capnp.Segment) (HackSessionContext_getPublicId_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return HackSessionContext_getPublicId_Results(st), err
}

func ReadRootHackSessionContext_getPublicId_Results(msg *capnp.Message) (HackSessionContext_getPublicId_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_getPublicId_Results(root.Struct()), err
}

func (s HackSessionContext_getPublicId_Results) String() string {
	str, _ := text.Marshal(0xe96193c522f6c05d, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getPublicId_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getPublicId_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getPublicId_Results {
	return HackSessionContext_getPublicId_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getPublicId_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getPublicId_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getPublicId_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getPublicId_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s HackSessionContext_getPublicId_Results) PublicId() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasPublicId() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s HackSessionContext_getPublicId_Results) PublicIdBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetPublicId(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s HackSessionContext_getPublicId_Results) Hostname() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasHostname() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s HackSessionContext_getPublicId_Results) HostnameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetHostname(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s HackSessionContext_getPublicId_Results) AutoUrl() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s HackSessionContext_getPublicId_Results) HasAutoUrl() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s HackSessionContext_getPublicId_Results) AutoUrlBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s HackSessionContext_getPublicId_Results) SetAutoUrl(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s HackSessionContext_getPublicId_Results) IsDemoUser() bool {
	return capnp.Struct(s).Bit(0)
}

func (s HackSessionContext_getPublicId_Results) SetIsDemoUser(v bool) {
	capnp.Struct(s).SetBit(0, v)
}

// HackSessionContext_getPublicId_Results_List is a list of HackSessionContext_getPublicId_Results.
type HackSessionContext_getPublicId_Results_List = capnp.StructList[HackSessionContext_getPublicId_Results]

// NewHackSessionContext_getPublicId_Results creates a new list of HackSessionContext_getPublicId_Results.
func NewHackSessionContext_getPublicId_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_getPublicId_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return capnp.StructList[HackSessionContext_getPublicId_Results](l), err
}

// HackSessionContext_getPublicId_Results_Future is a wrapper for a HackSessionContext_getPublicId_Results promised by a client call.
type HackSessionContext_getPublicId_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_getPublicId_Results_Future) Struct() (HackSessionContext_getPublicId_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_getPublicId_Results(p.Struct()), err
}

type HackSessionContext_obsoleteHttpGet_Params capnp.Struct

// HackSessionContext_obsoleteHttpGet_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteHttpGet_Params.
const HackSessionContext_obsoleteHttpGet_Params_TypeID = 0xe54437a7b8f52843

func NewHackSessionContext_obsoleteHttpGet_Params(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteHttpGet_Params(st), err
}

func NewRootHackSessionContext_obsoleteHttpGet_Params(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteHttpGet_Params(st), err
}

func ReadRootHackSessionContext_obsoleteHttpGet_Params(msg *capnp.Message) (HackSessionContext_obsoleteHttpGet_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteHttpGet_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteHttpGet_Params) String() string {
	str, _ := text.Marshal(0xe54437a7b8f52843, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteHttpGet_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteHttpGet_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteHttpGet_Params {
	return HackSessionContext_obsoleteHttpGet_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteHttpGet_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteHttpGet_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteHttpGet_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteHttpGet_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteHttpGet_Params_List is a list of HackSessionContext_obsoleteHttpGet_Params.
type HackSessionContext_obsoleteHttpGet_Params_List = capnp.StructList[HackSessionContext_obsoleteHttpGet_Params]

// NewHackSessionContext_obsoleteHttpGet_Params creates a new list of HackSessionContext_obsoleteHttpGet_Params.
func NewHackSessionContext_obsoleteHttpGet_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteHttpGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteHttpGet_Params](l), err
}

// HackSessionContext_obsoleteHttpGet_Params_Future is a wrapper for a HackSessionContext_obsoleteHttpGet_Params promised by a client call.
type HackSessionContext_obsoleteHttpGet_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteHttpGet_Params_Future) Struct() (HackSessionContext_obsoleteHttpGet_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteHttpGet_Params(p.Struct()), err
}

type HackSessionContext_obsoleteHttpGet_Results capnp.Struct

// HackSessionContext_obsoleteHttpGet_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteHttpGet_Results.
const HackSessionContext_obsoleteHttpGet_Results_TypeID = 0xb44df810894a44f4

func NewHackSessionContext_obsoleteHttpGet_Results(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteHttpGet_Results(st), err
}

func NewRootHackSessionContext_obsoleteHttpGet_Results(s *capnp.Segment) (HackSessionContext_obsoleteHttpGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteHttpGet_Results(st), err
}

func ReadRootHackSessionContext_obsoleteHttpGet_Results(msg *capnp.Message) (HackSessionContext_obsoleteHttpGet_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteHttpGet_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteHttpGet_Results) String() string {
	str, _ := text.Marshal(0xb44df810894a44f4, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteHttpGet_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteHttpGet_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteHttpGet_Results {
	return HackSessionContext_obsoleteHttpGet_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteHttpGet_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteHttpGet_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteHttpGet_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteHttpGet_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteHttpGet_Results_List is a list of HackSessionContext_obsoleteHttpGet_Results.
type HackSessionContext_obsoleteHttpGet_Results_List = capnp.StructList[HackSessionContext_obsoleteHttpGet_Results]

// NewHackSessionContext_obsoleteHttpGet_Results creates a new list of HackSessionContext_obsoleteHttpGet_Results.
func NewHackSessionContext_obsoleteHttpGet_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteHttpGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteHttpGet_Results](l), err
}

// HackSessionContext_obsoleteHttpGet_Results_Future is a wrapper for a HackSessionContext_obsoleteHttpGet_Results promised by a client call.
type HackSessionContext_obsoleteHttpGet_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteHttpGet_Results_Future) Struct() (HackSessionContext_obsoleteHttpGet_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteHttpGet_Results(p.Struct()), err
}

type HackSessionContext_getUserAddress_Params capnp.Struct

// HackSessionContext_getUserAddress_Params_TypeID is the unique identifier for the type HackSessionContext_getUserAddress_Params.
const HackSessionContext_getUserAddress_Params_TypeID = 0xa15e445037d1834c

func NewHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params(st), err
}

func NewRootHackSessionContext_getUserAddress_Params(s *capnp.Segment) (HackSessionContext_getUserAddress_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_getUserAddress_Params(st), err
}

func ReadRootHackSessionContext_getUserAddress_Params(msg *capnp.Message) (HackSessionContext_getUserAddress_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_getUserAddress_Params(root.Struct()), err
}

func (s HackSessionContext_getUserAddress_Params) String() string {
	str, _ := text.Marshal(0xa15e445037d1834c, capnp.Struct(s))
	return str
}

func (s HackSessionContext_getUserAddress_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_getUserAddress_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_getUserAddress_Params {
	return HackSessionContext_getUserAddress_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_getUserAddress_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_getUserAddress_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_getUserAddress_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_getUserAddress_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_getUserAddress_Params_List is a list of HackSessionContext_getUserAddress_Params.
type HackSessionContext_getUserAddress_Params_List = capnp.StructList[HackSessionContext_getUserAddress_Params]

// NewHackSessionContext_getUserAddress_Params creates a new list of HackSessionContext_getUserAddress_Params.
func NewHackSessionContext_getUserAddress_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_getUserAddress_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_getUserAddress_Params](l), err
}

// HackSessionContext_getUserAddress_Params_Future is a wrapper for a HackSessionContext_getUserAddress_Params promised by a client call.
type HackSessionContext_getUserAddress_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_getUserAddress_Params_Future) Struct() (HackSessionContext_getUserAddress_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_getUserAddress_Params(p.Struct()), err
}

type HackSessionContext_obsoleteGenerateApiToken_Params capnp.Struct

// HackSessionContext_obsoleteGenerateApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Params.
const HackSessionContext_obsoleteGenerateApiToken_Params_TypeID = 0x837afa61d880beb6

func NewHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGenerateApiToken_Params(st), err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGenerateApiToken_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) String() string {
	str, _ := text.Marshal(0x837afa61d880beb6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGenerateApiToken_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGenerateApiToken_Params {
	return HackSessionContext_obsoleteGenerateApiToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGenerateApiToken_Params_List is a list of HackSessionContext_obsoleteGenerateApiToken_Params.
type HackSessionContext_obsoleteGenerateApiToken_Params_List = capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Params]

// NewHackSessionContext_obsoleteGenerateApiToken_Params creates a new list of HackSessionContext_obsoleteGenerateApiToken_Params.
func NewHackSessionContext_obsoleteGenerateApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Params](l), err
}

// HackSessionContext_obsoleteGenerateApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Params promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGenerateApiToken_Params_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGenerateApiToken_Params(p.Struct()), err
}

type HackSessionContext_obsoleteGenerateApiToken_Results capnp.Struct

// HackSessionContext_obsoleteGenerateApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGenerateApiToken_Results.
const HackSessionContext_obsoleteGenerateApiToken_Results_TypeID = 0xc9973f31a90887f9

func NewHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGenerateApiToken_Results(st), err
}

func NewRootHackSessionContext_obsoleteGenerateApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGenerateApiToken_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGenerateApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGenerateApiToken_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) String() string {
	str, _ := text.Marshal(0xc9973f31a90887f9, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGenerateApiToken_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGenerateApiToken_Results {
	return HackSessionContext_obsoleteGenerateApiToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGenerateApiToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGenerateApiToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGenerateApiToken_Results_List is a list of HackSessionContext_obsoleteGenerateApiToken_Results.
type HackSessionContext_obsoleteGenerateApiToken_Results_List = capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Results]

// NewHackSessionContext_obsoleteGenerateApiToken_Results creates a new list of HackSessionContext_obsoleteGenerateApiToken_Results.
func NewHackSessionContext_obsoleteGenerateApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGenerateApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGenerateApiToken_Results](l), err
}

// HackSessionContext_obsoleteGenerateApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteGenerateApiToken_Results promised by a client call.
type HackSessionContext_obsoleteGenerateApiToken_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGenerateApiToken_Results_Future) Struct() (HackSessionContext_obsoleteGenerateApiToken_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGenerateApiToken_Results(p.Struct()), err
}

type HackSessionContext_obsoleteListApiTokens_Params capnp.Struct

// HackSessionContext_obsoleteListApiTokens_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Params.
const HackSessionContext_obsoleteListApiTokens_Params_TypeID = 0xfe777c71f871f413

func NewHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params(st), err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Params(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Params(st), err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Params(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteListApiTokens_Params) String() string {
	str, _ := text.Marshal(0xfe777c71f871f413, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteListApiTokens_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteListApiTokens_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteListApiTokens_Params {
	return HackSessionContext_obsoleteListApiTokens_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteListApiTokens_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteListApiTokens_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteListApiTokens_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteListApiTokens_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteListApiTokens_Params_List is a list of HackSessionContext_obsoleteListApiTokens_Params.
type HackSessionContext_obsoleteListApiTokens_Params_List = capnp.StructList[HackSessionContext_obsoleteListApiTokens_Params]

// NewHackSessionContext_obsoleteListApiTokens_Params creates a new list of HackSessionContext_obsoleteListApiTokens_Params.
func NewHackSessionContext_obsoleteListApiTokens_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteListApiTokens_Params](l), err
}

// HackSessionContext_obsoleteListApiTokens_Params_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Params promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteListApiTokens_Params_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteListApiTokens_Params(p.Struct()), err
}

type HackSessionContext_obsoleteListApiTokens_Results capnp.Struct

// HackSessionContext_obsoleteListApiTokens_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteListApiTokens_Results.
const HackSessionContext_obsoleteListApiTokens_Results_TypeID = 0xe9e4890dae20b03c

func NewHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Results(st), err
}

func NewRootHackSessionContext_obsoleteListApiTokens_Results(s *capnp.Segment) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteListApiTokens_Results(st), err
}

func ReadRootHackSessionContext_obsoleteListApiTokens_Results(msg *capnp.Message) (HackSessionContext_obsoleteListApiTokens_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteListApiTokens_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteListApiTokens_Results) String() string {
	str, _ := text.Marshal(0xe9e4890dae20b03c, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteListApiTokens_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteListApiTokens_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteListApiTokens_Results {
	return HackSessionContext_obsoleteListApiTokens_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteListApiTokens_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteListApiTokens_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteListApiTokens_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteListApiTokens_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteListApiTokens_Results_List is a list of HackSessionContext_obsoleteListApiTokens_Results.
type HackSessionContext_obsoleteListApiTokens_Results_List = capnp.StructList[HackSessionContext_obsoleteListApiTokens_Results]

// NewHackSessionContext_obsoleteListApiTokens_Results creates a new list of HackSessionContext_obsoleteListApiTokens_Results.
func NewHackSessionContext_obsoleteListApiTokens_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteListApiTokens_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteListApiTokens_Results](l), err
}

// HackSessionContext_obsoleteListApiTokens_Results_Future is a wrapper for a HackSessionContext_obsoleteListApiTokens_Results promised by a client call.
type HackSessionContext_obsoleteListApiTokens_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteListApiTokens_Results_Future) Struct() (HackSessionContext_obsoleteListApiTokens_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteListApiTokens_Results(p.Struct()), err
}

type HackSessionContext_obsoleteRevokeApiToken_Params capnp.Struct

// HackSessionContext_obsoleteRevokeApiToken_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Params.
const HackSessionContext_obsoleteRevokeApiToken_Params_TypeID = 0x845e8081686d8a0f

func NewHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Params(st), err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Params(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Params(st), err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Params(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) String() string {
	str, _ := text.Marshal(0x845e8081686d8a0f, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteRevokeApiToken_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteRevokeApiToken_Params {
	return HackSessionContext_obsoleteRevokeApiToken_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteRevokeApiToken_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteRevokeApiToken_Params_List is a list of HackSessionContext_obsoleteRevokeApiToken_Params.
type HackSessionContext_obsoleteRevokeApiToken_Params_List = capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Params]

// NewHackSessionContext_obsoleteRevokeApiToken_Params creates a new list of HackSessionContext_obsoleteRevokeApiToken_Params.
func NewHackSessionContext_obsoleteRevokeApiToken_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Params](l), err
}

// HackSessionContext_obsoleteRevokeApiToken_Params_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Params promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteRevokeApiToken_Params_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteRevokeApiToken_Params(p.Struct()), err
}

type HackSessionContext_obsoleteRevokeApiToken_Results capnp.Struct

// HackSessionContext_obsoleteRevokeApiToken_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteRevokeApiToken_Results.
const HackSessionContext_obsoleteRevokeApiToken_Results_TypeID = 0xaea67098dc479ce6

func NewHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(st), err
}

func NewRootHackSessionContext_obsoleteRevokeApiToken_Results(s *capnp.Segment) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteRevokeApiToken_Results(st), err
}

func ReadRootHackSessionContext_obsoleteRevokeApiToken_Results(msg *capnp.Message) (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteRevokeApiToken_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) String() string {
	str, _ := text.Marshal(0xaea67098dc479ce6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteRevokeApiToken_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteRevokeApiToken_Results {
	return HackSessionContext_obsoleteRevokeApiToken_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteRevokeApiToken_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteRevokeApiToken_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteRevokeApiToken_Results_List is a list of HackSessionContext_obsoleteRevokeApiToken_Results.
type HackSessionContext_obsoleteRevokeApiToken_Results_List = capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Results]

// NewHackSessionContext_obsoleteRevokeApiToken_Results creates a new list of HackSessionContext_obsoleteRevokeApiToken_Results.
func NewHackSessionContext_obsoleteRevokeApiToken_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteRevokeApiToken_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteRevokeApiToken_Results](l), err
}

// HackSessionContext_obsoleteRevokeApiToken_Results_Future is a wrapper for a HackSessionContext_obsoleteRevokeApiToken_Results promised by a client call.
type HackSessionContext_obsoleteRevokeApiToken_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteRevokeApiToken_Results_Future) Struct() (HackSessionContext_obsoleteRevokeApiToken_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteRevokeApiToken_Results(p.Struct()), err
}

type HackSessionContext_obsoleteGetIpNetwork_Params capnp.Struct

// HackSessionContext_obsoleteGetIpNetwork_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Params.
const HackSessionContext_obsoleteGetIpNetwork_Params_TypeID = 0x97f9d7a51ffe0741

func NewHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) String() string {
	str, _ := text.Marshal(0x97f9d7a51ffe0741, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpNetwork_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpNetwork_Params {
	return HackSessionContext_obsoleteGetIpNetwork_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpNetwork_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpNetwork_Params_List is a list of HackSessionContext_obsoleteGetIpNetwork_Params.
type HackSessionContext_obsoleteGetIpNetwork_Params_List = capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Params]

// NewHackSessionContext_obsoleteGetIpNetwork_Params creates a new list of HackSessionContext_obsoleteGetIpNetwork_Params.
func NewHackSessionContext_obsoleteGetIpNetwork_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Params](l), err
}

// HackSessionContext_obsoleteGetIpNetwork_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Params promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetIpNetwork_Params_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetIpNetwork_Params(p.Struct()), err
}

type HackSessionContext_obsoleteGetIpNetwork_Results capnp.Struct

// HackSessionContext_obsoleteGetIpNetwork_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpNetwork_Results.
const HackSessionContext_obsoleteGetIpNetwork_Results_TypeID = 0xa9502e5fdabb8b07

func NewHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetIpNetwork_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpNetwork_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpNetwork_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpNetwork_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) String() string {
	str, _ := text.Marshal(0xa9502e5fdabb8b07, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpNetwork_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpNetwork_Results {
	return HackSessionContext_obsoleteGetIpNetwork_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpNetwork_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpNetwork_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpNetwork_Results_List is a list of HackSessionContext_obsoleteGetIpNetwork_Results.
type HackSessionContext_obsoleteGetIpNetwork_Results_List = capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Results]

// NewHackSessionContext_obsoleteGetIpNetwork_Results creates a new list of HackSessionContext_obsoleteGetIpNetwork_Results.
func NewHackSessionContext_obsoleteGetIpNetwork_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpNetwork_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpNetwork_Results](l), err
}

// HackSessionContext_obsoleteGetIpNetwork_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpNetwork_Results promised by a client call.
type HackSessionContext_obsoleteGetIpNetwork_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetIpNetwork_Results_Future) Struct() (HackSessionContext_obsoleteGetIpNetwork_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetIpNetwork_Results(p.Struct()), err
}

type HackSessionContext_obsoleteGetIpInterface_Params capnp.Struct

// HackSessionContext_obsoleteGetIpInterface_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Params.
const HackSessionContext_obsoleteGetIpInterface_Params_TypeID = 0xecebff1662ba10a1

func NewHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) String() string {
	str, _ := text.Marshal(0xecebff1662ba10a1, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpInterface_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpInterface_Params {
	return HackSessionContext_obsoleteGetIpInterface_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpInterface_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpInterface_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpInterface_Params_List is a list of HackSessionContext_obsoleteGetIpInterface_Params.
type HackSessionContext_obsoleteGetIpInterface_Params_List = capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Params]

// NewHackSessionContext_obsoleteGetIpInterface_Params creates a new list of HackSessionContext_obsoleteGetIpInterface_Params.
func NewHackSessionContext_obsoleteGetIpInterface_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Params](l), err
}

// HackSessionContext_obsoleteGetIpInterface_Params_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Params promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetIpInterface_Params_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetIpInterface_Params(p.Struct()), err
}

type HackSessionContext_obsoleteGetIpInterface_Results capnp.Struct

// HackSessionContext_obsoleteGetIpInterface_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetIpInterface_Results.
const HackSessionContext_obsoleteGetIpInterface_Results_TypeID = 0xb9147a48c12c807d

func NewHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetIpInterface_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetIpInterface_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetIpInterface_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetIpInterface_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) String() string {
	str, _ := text.Marshal(0xb9147a48c12c807d, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetIpInterface_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetIpInterface_Results {
	return HackSessionContext_obsoleteGetIpInterface_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetIpInterface_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetIpInterface_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetIpInterface_Results_List is a list of HackSessionContext_obsoleteGetIpInterface_Results.
type HackSessionContext_obsoleteGetIpInterface_Results_List = capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Results]

// NewHackSessionContext_obsoleteGetIpInterface_Results creates a new list of HackSessionContext_obsoleteGetIpInterface_Results.
func NewHackSessionContext_obsoleteGetIpInterface_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetIpInterface_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetIpInterface_Results](l), err
}

// HackSessionContext_obsoleteGetIpInterface_Results_Future is a wrapper for a HackSessionContext_obsoleteGetIpInterface_Results promised by a client call.
type HackSessionContext_obsoleteGetIpInterface_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetIpInterface_Results_Future) Struct() (HackSessionContext_obsoleteGetIpInterface_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetIpInterface_Results(p.Struct()), err
}

type HackSessionContext_obsoleteGetUiViewForEndpoint_Params capnp.Struct

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
const HackSessionContext_obsoleteGetUiViewForEndpoint_Params_TypeID = 0xb45bb2d206694fe6

func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(st), err
}

func NewRootHackSessionContext_obsoleteGetUiViewForEndpoint_Params(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(st), err
}

func ReadRootHackSessionContext_obsoleteGetUiViewForEndpoint_Params(msg *capnp.Message) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) String() string {
	str, _ := text.Marshal(0xb45bb2d206694fe6, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetUiViewForEndpoint_Params) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetUiViewForEndpoint_Params {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Params) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List is a list of HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List = capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Params]

// NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params creates a new list of HackSessionContext_obsoleteGetUiViewForEndpoint_Params.
func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Params_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetUiViewForEndpoint_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Params](l), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future is a wrapper for a HackSessionContext_obsoleteGetUiViewForEndpoint_Params promised by a client call.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetUiViewForEndpoint_Params_Future) Struct() (HackSessionContext_obsoleteGetUiViewForEndpoint_Params, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Params(p.Struct()), err
}

type HackSessionContext_obsoleteGetUiViewForEndpoint_Results capnp.Struct

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_TypeID is the unique identifier for the type HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
const HackSessionContext_obsoleteGetUiViewForEndpoint_Results_TypeID = 0xfdc944999b9296df

func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(st), err
}

func NewRootHackSessionContext_obsoleteGetUiViewForEndpoint_Results(s *capnp.Segment) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(st), err
}

func ReadRootHackSessionContext_obsoleteGetUiViewForEndpoint_Results(msg *capnp.Message) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	root, err := msg.Root()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(root.Struct()), err
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) String() string {
	str, _ := text.Marshal(0xfdc944999b9296df, capnp.Struct(s))
	return str
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (HackSessionContext_obsoleteGetUiViewForEndpoint_Results) DecodeFromPtr(p capnp.Ptr) HackSessionContext_obsoleteGetUiViewForEndpoint_Results {
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(capnp.Struct{}.DecodeFromPtr(p))
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s HackSessionContext_obsoleteGetUiViewForEndpoint_Results) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List is a list of HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List = capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Results]

// NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results creates a new list of HackSessionContext_obsoleteGetUiViewForEndpoint_Results.
func NewHackSessionContext_obsoleteGetUiViewForEndpoint_Results_List(s *capnp.Segment, sz int32) (HackSessionContext_obsoleteGetUiViewForEndpoint_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return capnp.StructList[HackSessionContext_obsoleteGetUiViewForEndpoint_Results](l), err
}

// HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future is a wrapper for a HackSessionContext_obsoleteGetUiViewForEndpoint_Results promised by a client call.
type HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future struct{ *capnp.Future }

func (f HackSessionContext_obsoleteGetUiViewForEndpoint_Results_Future) Struct() (HackSessionContext_obsoleteGetUiViewForEndpoint_Results, error) {
	p, err := f.Future.Ptr()
	return HackSessionContext_obsoleteGetUiViewForEndpoint_Results(p.Struct()), err
}

type HackEmailSession capnp.Client

// HackEmailSession_TypeID is the unique identifier for the type HackEmailSession.
const HackEmailSession_TypeID = 0xc3b5ced7344b04a6

func (c HackEmailSession) Send(ctx context.Context, params func(email.EmailSendPort_send_Params) error) (email.EmailSendPort_send_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_send_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_send_Results_Future{Future: ans.Future()}, release

}

func (c HackEmailSession) HintAddress(ctx context.Context, params func(email.EmailSendPort_hintAddress_Params) error) (email.EmailSendPort_hintAddress_Results_Future, capnp.ReleaseFunc) {

	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		s.PlaceArgs = func(s capnp.Struct) error { return params(email.EmailSendPort_hintAddress_Params(s)) }
	}

	ans, release := capnp.Client(c).SendCall(ctx, s)
	return email.EmailSendPort_hintAddress_Results_Future{Future: ans.Future()}, release

}

func (c HackEmailSession) WaitStreaming() error {
	return capnp.Client(c).WaitStreaming()
}

// String returns a string that identifies this capability for debugging
// purposes.  Its format should not be depended on: in particular, it
// should not be used to compare clients.  Use IsSame to compare clients
// for equality.
func (c HackEmailSession) String() string {
	return "HackEmailSession(" + capnp.Client(c).String() + ")"
}

// AddRef creates a new Client that refers to the same capability as c.
// If c is nil or has resolved to null, then AddRef returns nil.
func (c HackEmailSession) AddRef() HackEmailSession {
	return HackEmailSession(capnp.Client(c).AddRef())
}

// Release releases a capability reference.  If this is the last
// reference to the capability, then the underlying resources associated
// with the capability will be released.
//
// Release will panic if c has already been released, but not if c is
// nil or resolved to null.
func (c HackEmailSession) Release() {
	capnp.Client(c).Release()
}

// Resolve blocks until the capability is fully resolved or the Context
// expires.
func (c HackEmailSession) Resolve(ctx context.Context) error {
	return capnp.Client(c).Resolve(ctx)
}

func (c HackEmailSession) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Client(c).EncodeAsPtr(seg)
}

func (HackEmailSession) DecodeFromPtr(p capnp.Ptr) HackEmailSession {
	return HackEmailSession(capnp.Client{}.DecodeFromPtr(p))
}

// IsValid reports whether c is a valid reference to a capability.
// A reference is invalid if it is nil, has resolved to null, or has
// been released.
func (c HackEmailSession) IsValid() bool {
	return capnp.Client(c).IsValid()
}

// IsSame reports whether c and other refer to a capability created by the
// same call to NewClient.  This can return false negatives if c or other
// are not fully resolved: use Resolve if this is an issue.  If either
// c or other are released, then IsSame panics.
func (c HackEmailSession) IsSame(other HackEmailSession) bool {
	return capnp.Client(c).IsSame(capnp.Client(other))
}

// Update the flowcontrol.FlowLimiter used to manage flow control for
// this client. This affects all future calls, but not calls already
// waiting to send. Passing nil sets the value to flowcontrol.NopLimiter,
// which is also the default.
func (c HackEmailSession) SetFlowLimiter(lim fc.FlowLimiter) {
	capnp.Client(c).SetFlowLimiter(lim)
}

// Get the current flowcontrol.FlowLimiter used to manage flow control
// for this client.
func (c HackEmailSession) GetFlowLimiter() fc.FlowLimiter {
	return capnp.Client(c).GetFlowLimiter()
}

// A HackEmailSession_Server is a HackEmailSession with a local implementation.
type HackEmailSession_Server interface {
	Send(context.Context, email.EmailSendPort_send) error

	HintAddress(context.Context, email.EmailSendPort_hintAddress) error
}

// HackEmailSession_NewServer creates a new Server from an implementation of HackEmailSession_Server.
func HackEmailSession_NewServer(s HackEmailSession_Server) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(HackEmailSession_Methods(nil, s), s, c)
}

// HackEmailSession_ServerToClient creates a new Client from an implementation of HackEmailSession_Server.
// The caller is responsible for calling Release on the returned Client.
func HackEmailSession_ServerToClient(s HackEmailSession_Server) HackEmailSession {
	return HackEmailSession(capnp.NewClient(HackEmailSession_NewServer(s)))
}

// HackEmailSession_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func HackEmailSession_Methods(methods []server.Method, s HackEmailSession_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      0,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "send",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Send(ctx, email.EmailSendPort_send{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xec831dbf4cc9bcca,
			MethodID:      1,
			InterfaceName: "email.capnp:EmailSendPort",
			MethodName:    "hintAddress",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.HintAddress(ctx, email.EmailSendPort_hintAddress{call})
		},
	})

	return methods
}

// HackEmailSession_List is a list of HackEmailSession.
type HackEmailSession_List = capnp.CapList[HackEmailSession]

// NewHackEmailSession_List creates a new list of HackEmailSession.
func NewHackEmailSession_List(s *capnp.Segment, sz int32) (HackEmailSession_List, error) {
	l, err := capnp.NewPointerList(s, sz)
	return capnp.CapList[HackEmailSession](l), err
}

const schema_bf6889795837d1e0 = "x\xda\xac\x95oh\x1cE\x18\xc6\xdfw\xf6.\x1b\xa1" +
	"%\x9dl\xec\x87B9\x8d\xa1\x8ah\xb0\xa9\x1a(\xd2" +
	"$65IM\xf5\xf6bJ\x8d\xa4\xba\xb9\x1b\x9b%" +
	"w\xbb\x97\x9d\x89i\x83b4\xfe!\x8a\x08J\xad\xa5" +
	"\x15\xec\x87V\"Z\xa5\x18\xb1U\x8c\"\xf9\x90\xa0B" +
	"\x0a\xa5U\x0a\x1a\xb1-\xa9\xa5\xa0\xb6\xa5\x11\xd2\x95\xb9" +
	"\xeb\xaes\x09\xd6\xa4\x91\xfbr\xeco\xdfg\xe6\x9dy" +
	"\x9fg\xef\xfa6Z\x1bY\xbd\xd4\xbd\x05H\xcb^\x8c" +
	"\x16\xf9\x9f~\xd9\x7f\xc2\xfa\xabo\x00\xe8*\x04\x88\xe8" +
	"\x00k\xde\xa1U\x04\"~\xc9+\x99\xce\xe7\xfa\xb7\xbe" +
	"\xa0\x90\x9d\xb4\\\x92:\xfdJl\xff\xf1\xe9]\x0ay" +
	"\x8d\x96J\xd2<0Q\x1d\xaf\xdf\xbaO!/\xd2_" +
	"\x10\"\xbe\xfe\xea\xe7?>^\x19\x1fR\xc8\x0e\xbaB" +
	"\xd6\x9c\xde\xdbp\xf2\xed\xec\x81\x83\x0a\xe9\xa6\xb7Kr" +
	"\xa1~\xe3\xe0\xb2\xcb\x9b>Q\x88M\xff\x90j\xa7\x1f" +
	"\xb6\x8b\x8e\x1ezL%\xed4!k\x9e\xe9\xbf\xe3\xeb" +
	"\xc6\xbe\xb2\xc3\x0ay4\xafv \xf2\xe0\xdd\xc7\xbf\x1f" +
	"\xfe\x06\xa8\xa1\xf9?OTo\xd91\xd89\x02\x80k" +
	"LZ\x8e\x86Eu\x00\xa3\x9d\xeaF;\xbd\x15\xc0\x9f" +
	"~\xb9xhu\xcd\xae1E\xa7\x95\xae\x95:\xaf\xef" +
	"\xb9\xf1\xe6\x96X\xf3\xe4\x1c\x9dM\xb4\x0a\xa5Bn\xc9" +
	"\x06bD\x0d)\xb4\xfe\xb6\x8b\x9f\xbdW]\x7fJ\x11" +
	"\x9a)=+\x9b\xf8(\xf5\xdd\xd4='\x8a\xce(\xe4" +
	"\xf7\xd2qI\xda\xbf\xbaT>\xfa\xa65\x05\xe6*D" +
	"\x80\xa8&\xd9\xa9\xd2\xa3\x08hL\x97\x9e\x01\xf4\xef\xfb" +
	"\xf8\xa6\x83K\x07\x7f\x9dRj\x7f0r\x97\xb3o\xd9" +
	"\x91\x8e\xe5\xfeo\xe7\x142\x91'?\xbd\xf5\xc6\x9e\xdd" +
	"\xf5c3\x0a\x193\xda$1.t_\xee~\xba\xf7" +
	"\x8aBF\x8d\x15\x04\xfc\xdc\xef]\xbf\xd3Jv\xdd\xc9" +
	"\x19\xd7\xb9\xed:\x95I+\xebd\xd76Z\xc9\xae\x16" +
	"\xc6\xe5\x93\xf5\xae#\xd8vQ\xe9vp7\xcd\x04k" +
	"`\x0e\xf3,\xc1\xea\xb2\xf6#n\x17s*\xe21\xcb" +
	"\xb32|\xa1:\x09\xf6\x94\xdb\xa5\xa8X\x9e~\x1d*" +
	"\x0dL4e\x1fb\xa2\xd7\xf5\xba\xa4\x86\x95\xc1\x7f4" +
	"\x8a\xae\xad\xb1\x8d\x89V\xce\xbc\xbaT\xcac\x9c\xff/" +
	";H0\xde\x93\xd6\xc4b\x0f#\xc1xIOZ\xcc" +
	"\xbb\x93@\xa6Q\x88l\x03\x13\x15\x09\x16\xe3\x05\xf5\xc5" +
	"\xf3\xee\xa5\xd5\xdel\xb3\xde\x07\\o\x83\x93\xca\xba\xb6" +
	"#\xe6\x9c\xeaB\xce\xa5\xc9\x11\xcc{\xd2J\xb2\xb9-" +
	"i\xb3d6d,;-\xb5t\xdbu\xe2\x88q-" +
	"j\x16#\xfa\xee\xf2\xe1-\xe7\xeb\xaa.\x01\x80?\xfe" +
	"\xc5X\xf3\xc8\xca\x81s\xf2\xffb\xc76Q\xc3\xf85" +
	"7\x14\x0a\xc5rJqD\xb3B\x8b\x02\x84\xd6\xc6\xc0" +
	"\xc9\x06\xc5\x0e \xc6\x0d\xa8#\x09#\x01\x83\x80\xa33" +
	"\xcf\x03\xa1\x17u\xc40Aqr\xdd\xe6\x97\xce\x9f\xfc" +
	"\xf0\x03:\xd5\x07\x84N\xea\x18\x09\xb3\x1a\x83p\xa2\xc7" +
	"\xc6\x81\xd0c:FC\x0bc\x90\x0ct\xec\x10\x10:" +
	"\xaacQ\x98\xe4\x18D-=|\x04\x08\x1d\xd6Q\x0f" +
	"\xb3\x1c\x83\x80\xa6C\xef\x03\xa1\xfbu,\x0e\xa3\x04\x83" +
	"P\xa5\xbbe\xddN\x1d\xb50\x811H\x15:x\x16" +
	"\x08\x1d\xd4\xfdmL\xc4{:\xd26\xe8\xc9\xa6T-" +
	"\xfa\xc1\xf1\xe2\xd5\xd1\x83Z\xf4\x03_AM\xdeY\xca" +
	"kd\xf65\x00\xa8\"\xcd6\x17\x92\xc4$R\xeb0" +
	"0HM\xbeLE\x81\x01K\xa4\x03\xe7\x80&G\xd4" +
	"\xe4G\xb0p\x1b\x85\x83^\"'\xbd\x16s\x03w\xef" +
	"\x9f\xc9\xb6\x95\xb5\xebF\xfem\xe0\x16\xe8\xc5\xb8UR" +
	"\x10\x8f\xff\x1dJ\xb9\x03N6\xa5\xf2\xce\xe3\xf3_Z" +
	"\xad\xcd%\x91@n.\xd3\"\x00\x11\x04\xa0\xd6F\x00" +
	"\xf3\x09\x0d\xcd4A\x8aX&\xbf>\xd4\x96\x0f;5" +
	"4\x05AJH\x19\x12\x00\xda}?\x80\x99\xd6\xd0\xdc" +
	"N\x10\xb52\xd4\x00hO\x1b\x80)44\xfb\x09\xfa" +
	"\xd9\xab\xcb\x00\x00.\x01\x82K\x00\xfdN\x97\x0b\xc7\xca" +
	"0\xe5\xd9\xb3V\x8fp[\xbdt\xf8\x8e\xcd\xebY\xc6" +
	"m\xe5\xa01\x0f\x11\x08\xa2,\\\x98\x93\x83!\xc9\xcd" +
	"H\xaeO=-\x16\x1bO\xb3\xc3\x7f1\x81y\xbd\x1f" +
	"\x81\xc2\xc6\xe4\xe5k\x19\xfew\x00\x00\x00\xff\xff\x8dg" +
	"k\x0e"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_bf6889795837d1e0,
		Nodes: []uint64{
			0x837afa61d880beb6,
			0x845e8081686d8a0f,
			0x97f9d7a51ffe0741,
			0xa15e445037d1834c,
			0xa9502e5fdabb8b07,
			0xaea67098dc479ce6,
			0xb44df810894a44f4,
			0xb45bb2d206694fe6,
			0xb9147a48c12c807d,
			0xc3b5ced7344b04a6,
			0xc9973f31a90887f9,
			0xe14c1f5321159b8f,
			0xe54437a7b8f52843,
			0xe706d835e9cd64af,
			0xe96193c522f6c05d,
			0xe9e4890dae20b03c,
			0xecebff1662ba10a1,
			0xfdc944999b9296df,
			0xfe777c71f871f413,
		},
		Compressed: true,
	})
}
